<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dt.lms.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="com.dt.lms.domain.Order">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="good_id" jdbcType="INTEGER" property="goodId" />
    <result column="good_name" jdbcType="VARCHAR" property="goodName" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="supOrRe" jdbcType="VARCHAR" property="suporre" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Base_Column_List">
    id, good_id, good_name, price, supOrRe, time, type
  </sql>

  <select id="inquiryByDate" resultType="com.dt.lms.domain.Order">
    SELECT * FROM lms_user WHERE type = #{type} AND time LIKE #{date}"%"
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lms_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lms_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dt.lms.domain.Order">
    insert into lms_order (id, good_id, good_name, 
      price, supOrRe, time, 
      type)
    values (#{id,jdbcType=INTEGER}, #{goodId,jdbcType=INTEGER}, #{goodName,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{suporre,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, 
      #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.dt.lms.domain.Order">
    insert into lms_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodId != null">
        good_id,
      </if>
      <if test="goodName != null">
        good_name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="suporre != null">
        supOrRe,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodId != null">
        #{goodId,jdbcType=INTEGER},
      </if>
      <if test="goodName != null">
        #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="suporre != null">
        #{suporre,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dt.lms.domain.Order">
    update lms_order
    <set>
      <if test="goodId != null">
        good_id = #{goodId,jdbcType=INTEGER},
      </if>
      <if test="goodName != null">
        good_name = #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="suporre != null">
        supOrRe = #{suporre,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dt.lms.domain.Order">
    update lms_order
    set good_id = #{goodId,jdbcType=INTEGER},
      good_name = #{goodName,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      supOrRe = #{suporre,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>